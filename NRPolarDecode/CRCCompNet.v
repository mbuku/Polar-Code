// -------------------------------------------------------------
// 
// File Name: hdlsrc\NRPolarDecodeHDL\CRCCompNet.v
// Created: 2022-01-15 05:13:24
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: CRCCompNet
// Source Path: NRPolarDecodeHDL/HDL Algorithm/NR Polar Decoder/CRC Decoder/CRCCompNet
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module CRCCompNet
          (clk,
           reset,
           enb,
           in1,
           in2,
           en,
           rst,
           gateErrIn,
           err);


  input   clk;
  input   reset;
  input   enb;
  input   in1;
  input   in2;
  input   en;  // ufix1
  input   rst;  // ufix1
  input   gateErrIn;  // ufix1
  output  err;  // ufix1


  reg  [0:11] CRCComp_crc_in;  // ufix1 [12]
  reg  [0:11] CRCComp_crc_rec;  // ufix1 [12]
  reg  [0:11] CRCComp_crc_in_next;  // ufix1 [12]
  reg  [0:11] CRCComp_crc_rec_next;  // ufix1 [12]
  reg  err_1;  // ufix1
  reg  [0:10] CRCComp_xor_reg;  // ufix1 [11]
  reg [10:0] CRCComp_concat_reg [0:10];  // ufix11 [11]
  reg [14:0] CRCComp_Y;  // ufix15
  reg  [0:11] CRCComp_crc_in_temp;  // ufix1 [12]
  reg  [0:11] CRCComp_crc_rec_temp;  // ufix1 [12]
  reg [31:0] CRCComp_cast;  // uint32
  reg [10:0] CRCComp_add_cast;  // ufix11
  reg [15:0] CRCComp_add_temp;  // ufix16
  reg [10:0] CRCComp_add_cast_0;  // ufix11
  reg [16:0] CRCComp_add_temp_0;  // ufix17
  reg [10:0] CRCComp_add_cast_1;  // ufix11
  reg [17:0] CRCComp_add_temp_1;  // ufix18
  reg [10:0] CRCComp_add_cast_2;  // ufix11
  reg [18:0] CRCComp_add_temp_2;  // ufix19
  reg [10:0] CRCComp_add_cast_3;  // ufix11
  reg [19:0] CRCComp_add_temp_3;  // ufix20
  reg [10:0] CRCComp_add_cast_4;  // ufix11
  reg [15:0] CRCComp_add_temp_4;  // ufix16
  reg [10:0] CRCComp_add_cast_5;  // ufix11
  reg [15:0] CRCComp_add_temp_5;  // ufix16
  reg [10:0] CRCComp_add_cast_6;  // ufix11
  reg [15:0] CRCComp_add_temp_6;  // ufix16
  reg [10:0] CRCComp_add_cast_7;  // ufix11
  reg [15:0] CRCComp_add_temp_7;  // ufix16
  reg [10:0] CRCComp_add_cast_8;  // ufix11
  reg [15:0] CRCComp_add_temp_8;  // ufix16
  reg [10:0] CRCComp_t_0_0;  // ufix11
  reg  CRCComp_t_1;
  reg [31:0] CRCComp_t_2_0;  // ufix32
  reg [31:0] CRCComp_t_3;  // ufix32
  reg signed [31:0] CRCComp_t_4_0;  // int32
  reg  CRCComp_t_5;
  reg [31:0] CRCComp_t_6_0;  // ufix32
  reg [31:0] CRCComp_t_7;  // ufix32
  reg signed [31:0] CRCComp_t_8;  // int32
  reg [31:0] CRCComp_t_9;  // uint32
  reg [15:0] CRCComp_t_10;  // ufix16
  reg [15:0] CRCComp_t_11;  // ufix16
  reg  CRCComp_t_12;
  reg [31:0] CRCComp_t_13;  // ufix32
  reg [31:0] CRCComp_t_14;  // ufix32
  reg signed [31:0] CRCComp_t_15;  // int32
  reg [31:0] CRCComp_t_16;  // uint32
  reg [16:0] CRCComp_t_17;  // ufix17
  reg [16:0] CRCComp_t_18;  // ufix17
  reg  CRCComp_t_19;
  reg [31:0] CRCComp_t_20;  // ufix32
  reg [31:0] CRCComp_t_21;  // ufix32
  reg signed [31:0] CRCComp_t_22;  // int32
  reg [31:0] CRCComp_t_23;  // uint32
  reg [17:0] CRCComp_t_24;  // ufix18
  reg [17:0] CRCComp_t_25;  // ufix18
  reg  CRCComp_t_26;
  reg [31:0] CRCComp_t_27;  // ufix32
  reg [31:0] CRCComp_t_28;  // ufix32
  reg signed [31:0] CRCComp_t_29;  // int32
  reg [31:0] CRCComp_t_30;  // uint32
  reg [18:0] CRCComp_t_31;  // ufix19
  reg [18:0] CRCComp_t_32;  // ufix19
  reg  CRCComp_t_33;
  reg [31:0] CRCComp_t_34;  // ufix32
  reg [31:0] CRCComp_t_35;  // ufix32
  reg signed [31:0] CRCComp_t_36;  // int32
  reg [31:0] CRCComp_t_37;  // uint32
  reg [19:0] CRCComp_t_38;  // ufix20
  reg [19:0] CRCComp_t_39;  // ufix20
  reg  CRCComp_t_40;
  reg [31:0] CRCComp_t_41;  // ufix32
  reg [31:0] CRCComp_t_42;  // ufix32
  reg signed [31:0] CRCComp_t_43;  // int32
  reg [31:0] CRCComp_t_44;  // uint32
  reg [15:0] CRCComp_t_45;  // ufix16
  reg [15:0] CRCComp_t_46;  // ufix16
  reg  CRCComp_t_47;
  reg [31:0] CRCComp_t_48;  // ufix32
  reg [31:0] CRCComp_t_49;  // ufix32
  reg signed [31:0] CRCComp_t_50;  // int32
  reg [31:0] CRCComp_t_51;  // uint32
  reg [15:0] CRCComp_t_52;  // ufix16
  reg [15:0] CRCComp_t_53;  // ufix16
  reg  CRCComp_t_54;
  reg [31:0] CRCComp_t_55;  // ufix32
  reg [31:0] CRCComp_t_56;  // ufix32
  reg signed [31:0] CRCComp_t_57;  // int32
  reg [31:0] CRCComp_t_58;  // uint32
  reg [15:0] CRCComp_t_59;  // ufix16
  reg [15:0] CRCComp_t_60;  // ufix16
  reg  CRCComp_t_61;
  reg [31:0] CRCComp_t_62;  // ufix32
  reg [31:0] CRCComp_t_63;  // ufix32
  reg signed [31:0] CRCComp_t_64;  // int32
  reg [31:0] CRCComp_t_65;  // uint32
  reg [15:0] CRCComp_t_66;  // ufix16
  reg [15:0] CRCComp_t_67;  // ufix16
  reg  CRCComp_t_68;
  reg [31:0] CRCComp_t_69;  // ufix32
  reg [31:0] CRCComp_t_70;  // ufix32
  reg signed [31:0] CRCComp_t_71;  // int32
  reg [31:0] CRCComp_t_72;  // uint32
  reg [15:0] CRCComp_t_73;  // ufix16
  reg [15:0] CRCComp_t_74;  // ufix16


  // CRCCompareFunction
  always @(posedge clk or posedge reset)
    begin : CRCComp_process
      if (reset == 1'b1) begin
        CRCComp_crc_in[0] <= 1'b0;
        CRCComp_crc_in[1] <= 1'b0;
        CRCComp_crc_in[2] <= 1'b0;
        CRCComp_crc_in[3] <= 1'b0;
        CRCComp_crc_in[4] <= 1'b0;
        CRCComp_crc_in[5] <= 1'b0;
        CRCComp_crc_in[6] <= 1'b0;
        CRCComp_crc_in[7] <= 1'b0;
        CRCComp_crc_in[8] <= 1'b0;
        CRCComp_crc_in[9] <= 1'b0;
        CRCComp_crc_in[10] <= 1'b0;
        CRCComp_crc_in[11] <= 1'b0;
        CRCComp_crc_rec[0] <= 1'b0;
        CRCComp_crc_rec[1] <= 1'b0;
        CRCComp_crc_rec[2] <= 1'b0;
        CRCComp_crc_rec[3] <= 1'b0;
        CRCComp_crc_rec[4] <= 1'b0;
        CRCComp_crc_rec[5] <= 1'b0;
        CRCComp_crc_rec[6] <= 1'b0;
        CRCComp_crc_rec[7] <= 1'b0;
        CRCComp_crc_rec[8] <= 1'b0;
        CRCComp_crc_rec[9] <= 1'b0;
        CRCComp_crc_rec[10] <= 1'b0;
        CRCComp_crc_rec[11] <= 1'b0;
      end
      else begin
        if (enb) begin
          CRCComp_crc_in[0] <= CRCComp_crc_in_next[0];
          CRCComp_crc_in[1] <= CRCComp_crc_in_next[1];
          CRCComp_crc_in[2] <= CRCComp_crc_in_next[2];
          CRCComp_crc_in[3] <= CRCComp_crc_in_next[3];
          CRCComp_crc_in[4] <= CRCComp_crc_in_next[4];
          CRCComp_crc_in[5] <= CRCComp_crc_in_next[5];
          CRCComp_crc_in[6] <= CRCComp_crc_in_next[6];
          CRCComp_crc_in[7] <= CRCComp_crc_in_next[7];
          CRCComp_crc_in[8] <= CRCComp_crc_in_next[8];
          CRCComp_crc_in[9] <= CRCComp_crc_in_next[9];
          CRCComp_crc_in[10] <= CRCComp_crc_in_next[10];
          CRCComp_crc_in[11] <= CRCComp_crc_in_next[11];
          CRCComp_crc_rec[0] <= CRCComp_crc_rec_next[0];
          CRCComp_crc_rec[1] <= CRCComp_crc_rec_next[1];
          CRCComp_crc_rec[2] <= CRCComp_crc_rec_next[2];
          CRCComp_crc_rec[3] <= CRCComp_crc_rec_next[3];
          CRCComp_crc_rec[4] <= CRCComp_crc_rec_next[4];
          CRCComp_crc_rec[5] <= CRCComp_crc_rec_next[5];
          CRCComp_crc_rec[6] <= CRCComp_crc_rec_next[6];
          CRCComp_crc_rec[7] <= CRCComp_crc_rec_next[7];
          CRCComp_crc_rec[8] <= CRCComp_crc_rec_next[8];
          CRCComp_crc_rec[9] <= CRCComp_crc_rec_next[9];
          CRCComp_crc_rec[10] <= CRCComp_crc_rec_next[10];
          CRCComp_crc_rec[11] <= CRCComp_crc_rec_next[11];
        end
      end
    end

  always @* begin
    CRCComp_add_temp = 16'b0000000000000000;
    CRCComp_add_temp_0 = 17'b00000000000000000;
    CRCComp_add_temp_1 = 18'b000000000000000000;
    CRCComp_add_temp_2 = 19'b0000000000000000000;
    CRCComp_add_temp_3 = 20'b00000000000000000000;
    CRCComp_add_temp_4 = 16'b0000000000000000;
    CRCComp_add_temp_5 = 16'b0000000000000000;
    CRCComp_add_temp_6 = 16'b0000000000000000;
    CRCComp_add_temp_7 = 16'b0000000000000000;
    CRCComp_add_temp_8 = 16'b0000000000000000;
    CRCComp_t_5 = 1'b0;
    CRCComp_t_7 = 32'b00000000000000000000000000000000;
    CRCComp_t_12 = 1'b0;
    CRCComp_t_14 = 32'b00000000000000000000000000000000;
    CRCComp_t_19 = 1'b0;
    CRCComp_t_21 = 32'b00000000000000000000000000000000;
    CRCComp_t_26 = 1'b0;
    CRCComp_t_28 = 32'b00000000000000000000000000000000;
    CRCComp_t_33 = 1'b0;
    CRCComp_t_35 = 32'b00000000000000000000000000000000;
    CRCComp_t_40 = 1'b0;
    CRCComp_t_42 = 32'b00000000000000000000000000000000;
    CRCComp_t_47 = 1'b0;
    CRCComp_t_49 = 32'b00000000000000000000000000000000;
    CRCComp_t_54 = 1'b0;
    CRCComp_t_56 = 32'b00000000000000000000000000000000;
    CRCComp_t_61 = 1'b0;
    CRCComp_t_63 = 32'b00000000000000000000000000000000;
    CRCComp_t_68 = 1'b0;
    CRCComp_t_70 = 32'b00000000000000000000000000000000;
    CRCComp_Y = 15'b000000000000000;
    CRCComp_add_cast = 11'b00000000000;
    CRCComp_add_cast_0 = 11'b00000000000;
    CRCComp_add_cast_1 = 11'b00000000000;
    CRCComp_add_cast_2 = 11'b00000000000;
    CRCComp_add_cast_3 = 11'b00000000000;
    CRCComp_add_cast_4 = 11'b00000000000;
    CRCComp_add_cast_5 = 11'b00000000000;
    CRCComp_add_cast_6 = 11'b00000000000;
    CRCComp_add_cast_7 = 11'b00000000000;
    CRCComp_add_cast_8 = 11'b00000000000;
    CRCComp_t_0_0 = 11'b00000000000;
    CRCComp_t_6_0 = 32'b00000000000000000000000000000000;
    CRCComp_t_10 = 16'b0000000000000000;
    CRCComp_t_11 = 16'b0000000000000000;
    CRCComp_t_13 = 32'b00000000000000000000000000000000;
    CRCComp_t_17 = 17'b00000000000000000;
    CRCComp_t_18 = 17'b00000000000000000;
    CRCComp_t_20 = 32'b00000000000000000000000000000000;
    CRCComp_t_24 = 18'b000000000000000000;
    CRCComp_t_25 = 18'b000000000000000000;
    CRCComp_t_27 = 32'b00000000000000000000000000000000;
    CRCComp_t_31 = 19'b0000000000000000000;
    CRCComp_t_32 = 19'b0000000000000000000;
    CRCComp_t_34 = 32'b00000000000000000000000000000000;
    CRCComp_t_38 = 20'b00000000000000000000;
    CRCComp_t_39 = 20'b00000000000000000000;
    CRCComp_t_41 = 32'b00000000000000000000000000000000;
    CRCComp_t_45 = 16'b0000000000000000;
    CRCComp_t_46 = 16'b0000000000000000;
    CRCComp_t_48 = 32'b00000000000000000000000000000000;
    CRCComp_t_52 = 16'b0000000000000000;
    CRCComp_t_53 = 16'b0000000000000000;
    CRCComp_t_55 = 32'b00000000000000000000000000000000;
    CRCComp_t_59 = 16'b0000000000000000;
    CRCComp_t_60 = 16'b0000000000000000;
    CRCComp_t_62 = 32'b00000000000000000000000000000000;
    CRCComp_t_66 = 16'b0000000000000000;
    CRCComp_t_67 = 16'b0000000000000000;
    CRCComp_t_69 = 32'b00000000000000000000000000000000;
    CRCComp_t_73 = 16'b0000000000000000;
    CRCComp_t_74 = 16'b0000000000000000;
    CRCComp_t_8 = 32'sd0;
    CRCComp_t_9 = 32'd0;
    CRCComp_t_15 = 32'sd0;
    CRCComp_t_16 = 32'd0;
    CRCComp_t_22 = 32'sd0;
    CRCComp_t_23 = 32'd0;
    CRCComp_t_29 = 32'sd0;
    CRCComp_t_30 = 32'd0;
    CRCComp_t_36 = 32'sd0;
    CRCComp_t_37 = 32'd0;
    CRCComp_t_43 = 32'sd0;
    CRCComp_t_44 = 32'd0;
    CRCComp_t_50 = 32'sd0;
    CRCComp_t_51 = 32'd0;
    CRCComp_t_57 = 32'sd0;
    CRCComp_t_58 = 32'd0;
    CRCComp_t_64 = 32'sd0;
    CRCComp_t_65 = 32'd0;
    CRCComp_t_71 = 32'sd0;
    CRCComp_t_72 = 32'd0;
    CRCComp_crc_in_temp[0] = CRCComp_crc_in[0];
    CRCComp_crc_in_temp[1] = CRCComp_crc_in[1];
    CRCComp_crc_in_temp[2] = CRCComp_crc_in[2];
    CRCComp_crc_in_temp[3] = CRCComp_crc_in[3];
    CRCComp_crc_in_temp[4] = CRCComp_crc_in[4];
    CRCComp_crc_in_temp[5] = CRCComp_crc_in[5];
    CRCComp_crc_in_temp[6] = CRCComp_crc_in[6];
    CRCComp_crc_in_temp[7] = CRCComp_crc_in[7];
    CRCComp_crc_in_temp[8] = CRCComp_crc_in[8];
    CRCComp_crc_in_temp[9] = CRCComp_crc_in[9];
    CRCComp_crc_in_temp[10] = CRCComp_crc_in[10];
    CRCComp_crc_in_temp[11] = CRCComp_crc_in[11];
    CRCComp_crc_rec_temp[0] = CRCComp_crc_rec[0];
    CRCComp_crc_rec_temp[1] = CRCComp_crc_rec[1];
    CRCComp_crc_rec_temp[2] = CRCComp_crc_rec[2];
    CRCComp_crc_rec_temp[3] = CRCComp_crc_rec[3];
    CRCComp_crc_rec_temp[4] = CRCComp_crc_rec[4];
    CRCComp_crc_rec_temp[5] = CRCComp_crc_rec[5];
    CRCComp_crc_rec_temp[6] = CRCComp_crc_rec[6];
    CRCComp_crc_rec_temp[7] = CRCComp_crc_rec[7];
    CRCComp_crc_rec_temp[8] = CRCComp_crc_rec[8];
    CRCComp_crc_rec_temp[9] = CRCComp_crc_rec[9];
    CRCComp_crc_rec_temp[10] = CRCComp_crc_rec[10];
    CRCComp_crc_rec_temp[11] = CRCComp_crc_rec[11];
    if (rst != 1'b0) begin
      CRCComp_crc_in_temp[0] = 1'b0;
      CRCComp_crc_in_temp[1] = 1'b0;
      CRCComp_crc_in_temp[2] = 1'b0;
      CRCComp_crc_in_temp[3] = 1'b0;
      CRCComp_crc_in_temp[4] = 1'b0;
      CRCComp_crc_in_temp[5] = 1'b0;
      CRCComp_crc_in_temp[6] = 1'b0;
      CRCComp_crc_in_temp[7] = 1'b0;
      CRCComp_crc_in_temp[8] = 1'b0;
      CRCComp_crc_in_temp[9] = 1'b0;
      CRCComp_crc_in_temp[10] = 1'b0;
      CRCComp_crc_in_temp[11] = 1'b0;
      CRCComp_crc_rec_temp[0] = 1'b0;
      CRCComp_crc_rec_temp[1] = 1'b0;
      CRCComp_crc_rec_temp[2] = 1'b0;
      CRCComp_crc_rec_temp[3] = 1'b0;
      CRCComp_crc_rec_temp[4] = 1'b0;
      CRCComp_crc_rec_temp[5] = 1'b0;
      CRCComp_crc_rec_temp[6] = 1'b0;
      CRCComp_crc_rec_temp[7] = 1'b0;
      CRCComp_crc_rec_temp[8] = 1'b0;
      CRCComp_crc_rec_temp[9] = 1'b0;
      CRCComp_crc_rec_temp[10] = 1'b0;
      CRCComp_crc_rec_temp[11] = 1'b0;
    end
    else if (en != 1'b0) begin
      CRCComp_crc_in_temp[0] = CRCComp_crc_in[1];
      CRCComp_crc_in_temp[1] = CRCComp_crc_in[2];
      CRCComp_crc_in_temp[2] = CRCComp_crc_in[3];
      CRCComp_crc_in_temp[3] = CRCComp_crc_in[4];
      CRCComp_crc_in_temp[4] = CRCComp_crc_in[5];
      CRCComp_crc_in_temp[5] = CRCComp_crc_in[6];
      CRCComp_crc_in_temp[6] = CRCComp_crc_in[7];
      CRCComp_crc_in_temp[7] = CRCComp_crc_in[8];
      CRCComp_crc_in_temp[8] = CRCComp_crc_in[9];
      CRCComp_crc_in_temp[9] = CRCComp_crc_in[10];
      CRCComp_crc_in_temp[10] = CRCComp_crc_in[11];
      CRCComp_crc_in_temp[11] = in1;
      CRCComp_crc_rec_temp[0] = CRCComp_crc_rec[1];
      CRCComp_crc_rec_temp[1] = CRCComp_crc_rec[2];
      CRCComp_crc_rec_temp[2] = CRCComp_crc_rec[3];
      CRCComp_crc_rec_temp[3] = CRCComp_crc_rec[4];
      CRCComp_crc_rec_temp[4] = CRCComp_crc_rec[5];
      CRCComp_crc_rec_temp[5] = CRCComp_crc_rec[6];
      CRCComp_crc_rec_temp[6] = CRCComp_crc_rec[7];
      CRCComp_crc_rec_temp[7] = CRCComp_crc_rec[8];
      CRCComp_crc_rec_temp[8] = CRCComp_crc_rec[9];
      CRCComp_crc_rec_temp[9] = CRCComp_crc_rec[10];
      CRCComp_crc_rec_temp[10] = CRCComp_crc_rec[11];
      CRCComp_crc_rec_temp[11] = in2;
    end
    CRCComp_xor_reg[1] = CRCComp_crc_in_temp[1] ^ CRCComp_crc_rec_temp[1];
    CRCComp_t_1 = (CRCComp_crc_in_temp[0] ^ CRCComp_crc_rec_temp[0]) != 1'b0;
    CRCComp_t_2_0 = {31'b0, CRCComp_t_1};
    CRCComp_t_3 = CRCComp_t_2_0 <<< 8'd10;
    CRCComp_t_4_0 = CRCComp_t_3;
    CRCComp_cast = CRCComp_t_4_0;
    CRCComp_concat_reg[0] = CRCComp_cast[10:0];
    if (gateErrIn != 1'b0) begin
      CRCComp_t_5 = CRCComp_xor_reg[1] != 1'b0;
      CRCComp_t_6_0 = {31'b0, CRCComp_t_5};
      CRCComp_t_7 = CRCComp_t_6_0 <<< 8'd9;
      CRCComp_t_8 = CRCComp_t_7;
      CRCComp_t_9 = CRCComp_t_8;
      CRCComp_add_cast = CRCComp_t_9[10:0];
      CRCComp_t_10 = {5'b0, CRCComp_concat_reg[0]};
      CRCComp_t_11 = {5'b0, CRCComp_add_cast};
      CRCComp_add_temp = CRCComp_t_10 + CRCComp_t_11;
      CRCComp_t_12 = (CRCComp_crc_in_temp[2] ^ CRCComp_crc_rec_temp[2]) != 1'b0;
      CRCComp_t_13 = {31'b0, CRCComp_t_12};
      CRCComp_t_14 = CRCComp_t_13 <<< 8'd8;
      CRCComp_t_15 = CRCComp_t_14;
      CRCComp_t_16 = CRCComp_t_15;
      CRCComp_add_cast_0 = CRCComp_t_16[10:0];
      CRCComp_t_17 = {1'b0, CRCComp_add_temp};
      CRCComp_t_18 = {6'b0, CRCComp_add_cast_0};
      CRCComp_add_temp_0 = CRCComp_t_17 + CRCComp_t_18;
      CRCComp_t_19 = (CRCComp_crc_in_temp[3] ^ CRCComp_crc_rec_temp[3]) != 1'b0;
      CRCComp_t_20 = {31'b0, CRCComp_t_19};
      CRCComp_t_21 = CRCComp_t_20 <<< 8'd7;
      CRCComp_t_22 = CRCComp_t_21;
      CRCComp_t_23 = CRCComp_t_22;
      CRCComp_add_cast_1 = CRCComp_t_23[10:0];
      CRCComp_t_24 = {1'b0, CRCComp_add_temp_0};
      CRCComp_t_25 = {7'b0, CRCComp_add_cast_1};
      CRCComp_add_temp_1 = CRCComp_t_24 + CRCComp_t_25;
      CRCComp_t_26 = (CRCComp_crc_in_temp[4] ^ CRCComp_crc_rec_temp[4]) != 1'b0;
      CRCComp_t_27 = {31'b0, CRCComp_t_26};
      CRCComp_t_28 = CRCComp_t_27 <<< 8'd6;
      CRCComp_t_29 = CRCComp_t_28;
      CRCComp_t_30 = CRCComp_t_29;
      CRCComp_add_cast_2 = CRCComp_t_30[10:0];
      CRCComp_t_31 = {1'b0, CRCComp_add_temp_1};
      CRCComp_t_32 = {8'b0, CRCComp_add_cast_2};
      CRCComp_add_temp_2 = CRCComp_t_31 + CRCComp_t_32;
      CRCComp_t_33 = (CRCComp_crc_in_temp[5] ^ CRCComp_crc_rec_temp[5]) != 1'b0;
      CRCComp_t_34 = {31'b0, CRCComp_t_33};
      CRCComp_t_35 = CRCComp_t_34 <<< 8'd5;
      CRCComp_t_36 = CRCComp_t_35;
      CRCComp_t_37 = CRCComp_t_36;
      CRCComp_add_cast_3 = CRCComp_t_37[10:0];
      CRCComp_t_38 = {1'b0, CRCComp_add_temp_2};
      CRCComp_t_39 = {9'b0, CRCComp_add_cast_3};
      CRCComp_add_temp_3 = CRCComp_t_38 + CRCComp_t_39;
      CRCComp_Y = CRCComp_add_temp_3[14:0];
      CRCComp_t_40 = (CRCComp_crc_in_temp[6] ^ CRCComp_crc_rec_temp[6]) != 1'b0;
      CRCComp_t_41 = {31'b0, CRCComp_t_40};
      CRCComp_t_42 = CRCComp_t_41 <<< 8'd4;
      CRCComp_t_43 = CRCComp_t_42;
      CRCComp_t_44 = CRCComp_t_43;
      CRCComp_add_cast_4 = CRCComp_t_44[10:0];
      CRCComp_t_45 = {1'b0, CRCComp_Y};
      CRCComp_t_46 = {5'b0, CRCComp_add_cast_4};
      CRCComp_add_temp_4 = CRCComp_t_45 + CRCComp_t_46;
      CRCComp_Y = CRCComp_add_temp_4[14:0];
      CRCComp_t_47 = (CRCComp_crc_in_temp[7] ^ CRCComp_crc_rec_temp[7]) != 1'b0;
      CRCComp_t_48 = {31'b0, CRCComp_t_47};
      CRCComp_t_49 = CRCComp_t_48 <<< 8'd3;
      CRCComp_t_50 = CRCComp_t_49;
      CRCComp_t_51 = CRCComp_t_50;
      CRCComp_add_cast_5 = CRCComp_t_51[10:0];
      CRCComp_t_52 = {1'b0, CRCComp_Y};
      CRCComp_t_53 = {5'b0, CRCComp_add_cast_5};
      CRCComp_add_temp_5 = CRCComp_t_52 + CRCComp_t_53;
      CRCComp_Y = CRCComp_add_temp_5[14:0];
      CRCComp_t_54 = (CRCComp_crc_in_temp[8] ^ CRCComp_crc_rec_temp[8]) != 1'b0;
      CRCComp_t_55 = {31'b0, CRCComp_t_54};
      CRCComp_t_56 = CRCComp_t_55 <<< 8'd2;
      CRCComp_t_57 = CRCComp_t_56;
      CRCComp_t_58 = CRCComp_t_57;
      CRCComp_add_cast_6 = CRCComp_t_58[10:0];
      CRCComp_t_59 = {1'b0, CRCComp_Y};
      CRCComp_t_60 = {5'b0, CRCComp_add_cast_6};
      CRCComp_add_temp_6 = CRCComp_t_59 + CRCComp_t_60;
      CRCComp_Y = CRCComp_add_temp_6[14:0];
      CRCComp_t_61 = (CRCComp_crc_in_temp[9] ^ CRCComp_crc_rec_temp[9]) != 1'b0;
      CRCComp_t_62 = {31'b0, CRCComp_t_61};
      CRCComp_t_63 = CRCComp_t_62 <<< 8'd1;
      CRCComp_t_64 = CRCComp_t_63;
      CRCComp_t_65 = CRCComp_t_64;
      CRCComp_add_cast_7 = CRCComp_t_65[10:0];
      CRCComp_t_66 = {1'b0, CRCComp_Y};
      CRCComp_t_67 = {5'b0, CRCComp_add_cast_7};
      CRCComp_add_temp_7 = CRCComp_t_66 + CRCComp_t_67;
      CRCComp_Y = CRCComp_add_temp_7[14:0];
      CRCComp_t_68 = (CRCComp_crc_in_temp[10] ^ CRCComp_crc_rec_temp[10]) != 1'b0;
      CRCComp_t_69 = {31'b0, CRCComp_t_68};
      CRCComp_t_70 = CRCComp_t_69 <<< 8'd0;
      CRCComp_t_71 = CRCComp_t_70;
      CRCComp_t_72 = CRCComp_t_71;
      CRCComp_add_cast_8 = CRCComp_t_72[10:0];
      CRCComp_t_73 = {1'b0, CRCComp_Y};
      CRCComp_t_74 = {5'b0, CRCComp_add_cast_8};
      CRCComp_add_temp_8 = CRCComp_t_73 + CRCComp_t_74;
      CRCComp_Y = CRCComp_add_temp_8[14:0];
      CRCComp_t_0_0 = CRCComp_Y[10:0];
      err_1 = CRCComp_t_0_0 != 11'b00000000000;
    end
    else begin
      err_1 = 1'b0;
    end
    CRCComp_crc_in_next[0] = CRCComp_crc_in_temp[0];
    CRCComp_crc_in_next[1] = CRCComp_crc_in_temp[1];
    CRCComp_crc_in_next[2] = CRCComp_crc_in_temp[2];
    CRCComp_crc_in_next[3] = CRCComp_crc_in_temp[3];
    CRCComp_crc_in_next[4] = CRCComp_crc_in_temp[4];
    CRCComp_crc_in_next[5] = CRCComp_crc_in_temp[5];
    CRCComp_crc_in_next[6] = CRCComp_crc_in_temp[6];
    CRCComp_crc_in_next[7] = CRCComp_crc_in_temp[7];
    CRCComp_crc_in_next[8] = CRCComp_crc_in_temp[8];
    CRCComp_crc_in_next[9] = CRCComp_crc_in_temp[9];
    CRCComp_crc_in_next[10] = CRCComp_crc_in_temp[10];
    CRCComp_crc_in_next[11] = CRCComp_crc_in_temp[11];
    CRCComp_crc_rec_next[0] = CRCComp_crc_rec_temp[0];
    CRCComp_crc_rec_next[1] = CRCComp_crc_rec_temp[1];
    CRCComp_crc_rec_next[2] = CRCComp_crc_rec_temp[2];
    CRCComp_crc_rec_next[3] = CRCComp_crc_rec_temp[3];
    CRCComp_crc_rec_next[4] = CRCComp_crc_rec_temp[4];
    CRCComp_crc_rec_next[5] = CRCComp_crc_rec_temp[5];
    CRCComp_crc_rec_next[6] = CRCComp_crc_rec_temp[6];
    CRCComp_crc_rec_next[7] = CRCComp_crc_rec_temp[7];
    CRCComp_crc_rec_next[8] = CRCComp_crc_rec_temp[8];
    CRCComp_crc_rec_next[9] = CRCComp_crc_rec_temp[9];
    CRCComp_crc_rec_next[10] = CRCComp_crc_rec_temp[10];
    CRCComp_crc_rec_next[11] = CRCComp_crc_rec_temp[11];
  end



  assign err = err_1;

endmodule  // CRCCompNet

