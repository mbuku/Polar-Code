// -------------------------------------------------------------
// 
// File Name: hdlsrc\NRPolarEncodeHDL\uplinkValid.v
// Created: 2022-01-15 05:10:41
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: uplinkValid
// Source Path: NRPolarEncodeHDL/HDL Algorithm/NR Polar Encoder/configure/validateConfig/uplinkValid
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module uplinkValid
          (clk,
           reset,
           enb,
           K,
           E,
           configValid);


  input   clk;
  input   reset;
  input   enb;
  input   [9:0] K;  // ufix10
  input   [16:0] E;  // ufix17
  output  configValid;


  wire [9:0] Constant1_out1;  // ufix10
  wire GreaterThan1_relop1;
  wire [16:0] GreaterThan_1_1;  // ufix17
  wire GreaterThan_relop1;
  wire [16:0] Constant2_out1;  // ufix17
  wire LessThan_relop1;
  wire AND_out1;
  reg  Delay_out1;


  assign Constant1_out1 = 10'b0000011111;



  assign GreaterThan1_relop1 = K >= Constant1_out1;



  assign GreaterThan_1_1 = {7'b0, K};
  assign GreaterThan_relop1 = E > GreaterThan_1_1;



  assign Constant2_out1 = 17'b00010000000000000;



  assign LessThan_relop1 = E <= Constant2_out1;



  assign AND_out1 = LessThan_relop1 & (GreaterThan1_relop1 & GreaterThan_relop1);



  always @(posedge clk or posedge reset)
    begin : Delay_process
      if (reset == 1'b1) begin
        Delay_out1 <= 1'b0;
      end
      else begin
        if (enb) begin
          Delay_out1 <= AND_out1;
        end
      end
    end



  assign configValid = Delay_out1;

endmodule  // uplinkValid

